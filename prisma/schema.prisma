datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  phone         String   @unique
  passwordHash  String
  role          Role     @default(USER)
  priceModifier Float    @default(0)

  /// отношение «агент → клиенты»
  agent         User?    @relation("AgentClients", fields: [agentId], references: [id])
  clients       User[]   @relation("AgentClients")
  agentId       Int?

  stores        Store[]
  orders        Order[]
  createdAt     DateTime @default(now())
}

model Store {
  id        Int     @id @default(autoincrement())
  title     String
  address   String
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  orders    Order[]
}

model Product {
  id             Int      @id @default(autoincrement())
  productId      String   @unique
  article        String?  @unique
  name           String
  brand          String?
  type           String?
  volume         Float?                     // ← было String?
  degree         Float?                     // оставляем числом
  quantityInBox  Int?
  basePrice      Float
  img            String?
  stock          Int      @default(0)
  isArchived     Boolean  @default(false)

  wineColor      String?
  sweetnessLevel String?
  wineType       String?
  giftPackaging  String?
  manufacturer   String?
  excerpt        String?
  rawMaterials   String?

  promos         Promo[]
  orderItems     OrderItem[]
  createdAt      DateTime @default(now())
}

model Promo {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [productId], references: [id])
  productId   Int
  promoPrice  Float
  comment     String?
  expiresAt   DateTime
}

model Order {
  id        Int       @id @default(autoincrement())
  store     Store     @relation(fields: [storeId], references: [id])
  storeId   Int
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  total     Float
  items     OrderItem[]
  createdAt DateTime  @default(now())
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
  price      Float
  quantity   Int
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int
  storeId   Int
  items     CartItem[]
  updatedAt DateTime   @updatedAt

  @@unique([userId, storeId])
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  qty       Int
  product   Product @relation(fields: [productId], references: [id])
  cart      Cart    @relation(fields: [cartId], references: [id])

  @@unique([cartId, productId])
}


enum Role {
  ADMIN
  AGENT
  USER
}
storeId   Int